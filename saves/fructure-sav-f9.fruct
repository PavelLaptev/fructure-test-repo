(◇ (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))))) (sort . expr)) (define (p/ #hash((sort . params)) ((p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h) (p/ #hash((sort . char)) ⊙))) (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s) (p/ #hash((sort . char)) ⊙))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (if (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) m) (p/ #hash((sort . char)) p) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) y) (p/ #hash((sort . char)) ?))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s))))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (num (p/ #hash((sort . digit)) 0))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) a) (p/ #hash((sort . char)) d) (p/ #hash((sort . char)) d) (p/ #hash((sort . char)) |1|))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) r) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) s) (p/ #hash((sort . char)) t))))) (p/ #hash((handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) l) (p/ #hash((sort . char)) e) (p/ #hash((sort . char)) n) (p/ #hash((sort . char)) g) (p/ #hash((sort . char)) t) (p/ #hash((sort . char)) h)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s)))))))))) (sort . expr) (▹ . ▹)) (ref (p/ #hash((sort . pat)) (id (p/ #hash((sort . char)) x) (p/ #hash((sort . char)) s))))))))))))))))