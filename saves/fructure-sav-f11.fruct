(◇ (p/ #hash((depth . 0) (handle . #t) (in-scope . ()) (sort . expr)) (begin (p/ #hash((depth . 1) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))))) (sort . expr) (variadic . #t)) (define (p/ #hash((depth . 2) (sort . params)) ((p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p) (p/ #hash((depth . 4) (sort . char)) ⊙))) (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f) (p/ #hash((depth . 4) (sort . char)) ⊙))))) (p/ #hash((depth . 2) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))))) (sort . expr)) (λ (p/ #hash((depth . 3) (sort . params)) ((p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s) (p/ #hash((depth . 5) (sort . char)) ⊙))))) (p/ #hash((depth . 3) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (if (p/ #hash((depth . 4) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 5) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 6) (sort . pat)) (id (p/ #hash((depth . 7) (sort . char)) e) (p/ #hash((depth . 7) (sort . char)) m) (p/ #hash((depth . 7) (sort . char)) p) (p/ #hash((depth . 7) (sort . char)) t) (p/ #hash((depth . 7) (sort . char)) y) (p/ #hash((depth . 7) (sort . char)) ?))))) (p/ #hash((depth . 5) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 6) (sort . pat)) (id (p/ #hash((depth . 7) (sort . char)) x) (p/ #hash((depth . 7) (sort . char)) s))))))) (p/ #hash((depth . 4) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 5) (sort . pat)) (id (p/ #hash((depth . 6) (sort . char)) n) (p/ #hash((depth . 6) (sort . char)) u) (p/ #hash((depth . 6) (sort . char)) l) (p/ #hash((depth . 6) (sort . char)) l))))) (p/ #hash((depth . 4) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 5) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 6) (sort . pat)) (id (p/ #hash((depth . 7) (sort . char)) c) (p/ #hash((depth . 7) (sort . char)) o) (p/ #hash((depth . 7) (sort . char)) n) (p/ #hash((depth . 7) (sort . char)) s))))) (p/ #hash((depth . 5) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 6) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 7) (sort . pat)) (id (p/ #hash((depth . 8) (sort . char)) f))))) (p/ #hash((depth . 6) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) f) (p/ #hash((depth . 9) (sort . char)) i) (p/ #hash((depth . 9) (sort . char)) r) (p/ #hash((depth . 9) (sort . char)) s) (p/ #hash((depth . 9) (sort . char)) t))))) (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) x) (p/ #hash((depth . 9) (sort . char)) s))))))))) (p/ #hash((depth . 5) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 6) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr) (▹ . ▹)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) m) (p/ #hash((depth . 9) (sort . char)) a) (p/ #hash((depth . 9) (sort . char)) p))))) (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) f))))))) (p/ #hash((depth . 6) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (app (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) r) (p/ #hash((depth . 9) (sort . char)) e) (p/ #hash((depth . 9) (sort . char)) s) (p/ #hash((depth . 9) (sort . char)) t))))) (p/ #hash((depth . 7) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (app ((sort expr) / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))) ((sort expr) / ⊙))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) f)))))))) ((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 4) (sort . pat)) (id (p/ #hash((depth . 5) (sort . char)) x) (p/ #hash((depth . 5) (sort . char)) s)))))))))) (sort . expr)) (ref (p/ #hash((depth . 8) (sort . pat)) (id (p/ #hash((depth . 9) (sort . char)) x) (p/ #hash((depth . 9) (sort . char)) s))))))))))))))))) (p/ #hash((depth . 1) (handle . #t) (in-scope . (((⋱ (▹ (sort expr) xs ... / ⊙) (▹ (sort expr) xs ... / (ref (quote (p/ #hash((depth . 3) (sort . pat)) (id (p/ #hash((depth . 4) (sort . char)) m) (p/ #hash((depth . 4) (sort . char)) a) (p/ #hash((depth . 4) (sort . char)) p)))))))))) (sort . expr) (variadic . #t)) ⊙+))))